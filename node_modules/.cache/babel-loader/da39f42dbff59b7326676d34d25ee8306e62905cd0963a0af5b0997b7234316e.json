{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/syntask/src/components/CatalogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/catalog_page.css'; // You can create a separate CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatalogPage() {\n  _s();\n  const [savedTexts, setSavedTexts] = useState([]);\n  useEffect(() => {\n    const texts = JSON.parse(localStorage.getItem('savedTexts')) || [];\n    setSavedTexts(texts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"catalog-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-box\",\n      children: [\" \", savedTexts.map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        children: text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/make-task\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-task-btn\",\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n_s(CatalogPage, \"FCkHQjXIKMzbZn05bPnHA7fWbrY=\");\n_c = CatalogPage;\nexport default CatalogPage;\nvar _c;\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CatalogPage","_s","savedTexts","setSavedTexts","texts","JSON","parse","localStorage","getItem","className","children","map","text","index","fileName","_jsxFileName","lineNumber","columnNumber","Link","to","_c","$RefreshReg$"],"sources":["/Users/acecanacan/syntask/src/components/CatalogPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/catalog_page.css';// You can create a separate CSS file for styling\n\nfunction CatalogPage() {\n    const [savedTexts, setSavedTexts] = useState([]);\n    \n    useEffect(() => {\n      const texts = JSON.parse(localStorage.getItem('savedTexts')) || [];\n      setSavedTexts(texts);\n    }, []);\n  \n    return (\n      <div className=\"catalog-container\">\n        <div className=\"wrapper-box\"> {/* Added wrapper-box */}\n          {savedTexts.map((text, index) => (\n            <div key={index} className=\"text-box\">\n              {text}\n            </div>\n          ))}\n        </div>\n        <Link to=\"/make-task\">\n        <button className=\"new-task-btn\">New Task</button>\n      </Link>\n      </div>\n    );\n  }\n  \n  \n\nexport default CatalogPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,4BAA4B,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;IAClEL,aAAa,CAACC,KAAK,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCX,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,GAAC,EAC3BR,UAAU,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1Bd,OAAA;QAAiBU,SAAS,EAAC,UAAU;QAAAC,QAAA,EAClCE;MAAI,GADGC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA,CAACmB,IAAI;MAACC,EAAE,EAAC,YAAY;MAAAT,QAAA,eACrBX,OAAA;QAAQU,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAtBMD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}