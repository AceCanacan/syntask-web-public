{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/syntask/src/components/make_task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './make_task.css'; // You can create a separate CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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'; // Replace with your actual API key\n\nfunction MakeTask() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmission = async () => {\n    try {\n      const systemMessage = {\n        role: 'system',\n        content: `Transform the text: \"${inputText}\"` // Update the prompt as per your need\n      };\n\n      const response = await axios.post(API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [systemMessage]\n      }, {\n        headers: {\n          Authorization: `Bearer ${API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setOutputText(response.data.choices[0].message.content.trim());\n    } catch (error) {\n      var _error$response;\n      console.error('Error response from OpenAI:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      setError('Error transforming text');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmission,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-box\",\n      children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: outputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(MakeTask, \"/PBke9bGn85y33MQZoyAqnCWUW8=\");\n_c = MakeTask;\nexport default MakeTask;\nvar _c;\n$RefreshReg$(_c, \"MakeTask\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","API_KEY","MakeTask","_s","inputText","setInputText","outputText","setOutputText","error","setError","handleSubmission","systemMessage","role","content","response","post","model","messages","headers","Authorization","data","choices","message","trim","_error$response","console","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/acecanacan/syntask/src/components/make_task.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './make_task.css'; // You can create a separate CSS file for styling\n\nconst API_URL = 'https://api.openai.com/v1/chat/completions';\nconst API_KEY = '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'; // Replace with your actual API key\n\nfunction MakeTask() {\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmission = async () => {\n    try {\n      const systemMessage = {\n        role: 'system',\n        content: `Transform the text: \"${inputText}\"`, // Update the prompt as per your need\n      };\n      const response = await axios.post(\n        API_URL,\n        {\n          model: 'gpt-3.5-turbo',\n          messages: [systemMessage],\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      setOutputText(response.data.choices[0].message.content.trim());\n    } catch (error) {\n      console.error('Error response from OpenAI:', error.response?.data);\n      setError('Error transforming text');\n    }\n  };\n\n  return (\n    <div className=\"task-container\">\n      <div className=\"left-box\">\n        <textarea value={inputText} onChange={(e) => setInputText(e.target.value)} />\n        <button onClick={handleSubmission}>Submit</button>\n      </div>\n      <div className=\"right-box\">\n        {error ? <p>{error}</p> : <p>{outputText}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default MakeTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}