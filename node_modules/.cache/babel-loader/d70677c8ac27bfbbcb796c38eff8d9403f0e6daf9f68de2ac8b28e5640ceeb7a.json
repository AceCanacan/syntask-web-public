{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/syntask/src/components/CatalogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Auth } from 'aws-amplify'; // Import Auth from aws-amplify\nimport '../styles/catalog_page.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatalogPage() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Add state to manage authentication\n  const [savedTexts, setSavedTexts] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthState(); // Check authentication state on component mount\n    const texts = JSON.parse(localStorage.getItem('savedTexts')) || [];\n    setSavedTexts(texts);\n  }, []);\n  const checkAuthState = async () => {\n    try {\n      await Auth.currentAuthenticatedUser();\n      setIsAuthenticated(true);\n    } catch {\n      setIsAuthenticated(false);\n    }\n  };\n  const handleTextBoxClick = index => {\n    navigate(`/text-detail/${index}`);\n  };\n  const handleNewTaskClick = () => {\n    navigate('/make-task');\n  };\n  if (!isAuthenticated) return null; // If not authenticated, do not render the component\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"catalog-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-box\",\n        children: savedTexts.map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-box\",\n          onClick: () => handleTextBoxClick(index),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: text.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 5\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [text.content ? text.content.substring(0, 200) : 'No content available', \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 5\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 3\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-task-btn\",\n        onClick: handleNewTaskClick,\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(CatalogPage, \"OrkQQ8eMQa3PxbDKXCAvmBXpxU0=\", false, function () {\n  return [useNavigate];\n});\n_c = CatalogPage;\nexport default CatalogPage;\nvar _c;\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"names":["React","useEffect","useState","Auth","useNavigate","jsxDEV","_jsxDEV","CatalogPage","_s","isAuthenticated","setIsAuthenticated","savedTexts","setSavedTexts","navigate","checkAuthState","texts","JSON","parse","localStorage","getItem","currentAuthenticatedUser","handleTextBoxClick","index","handleNewTaskClick","className","children","map","text","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","content","substring","_c","$RefreshReg$"],"sources":["/Users/acecanacan/syntask/src/components/CatalogPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Auth } from 'aws-amplify'; // Import Auth from aws-amplify\nimport '../styles/catalog_page.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CatalogPage() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Add state to manage authentication\n  const [savedTexts, setSavedTexts] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    checkAuthState(); // Check authentication state on component mount\n    const texts = JSON.parse(localStorage.getItem('savedTexts')) || [];\n    setSavedTexts(texts);\n  }, []);\n\n  const checkAuthState = async () => {\n    try {\n      await Auth.currentAuthenticatedUser();\n      setIsAuthenticated(true);\n    } catch {\n      setIsAuthenticated(false);\n    }\n  };\n\n  const handleTextBoxClick = (index) => {\n    navigate(`/text-detail/${index}`);\n  };\n\n  const handleNewTaskClick = () => {\n    navigate('/make-task');\n  };\n\n  if (!isAuthenticated) return null; // If not authenticated, do not render the component\n\n\n  return (\n    <div className=\"catalog-container\">\n      <div className=\"content-container\">\n        <div className=\"wrapper-box\">\n        {savedTexts.map((text, index) => (\n  <div \n    className=\"text-box\"\n    key={index}\n    onClick={() => handleTextBoxClick(index)}\n  >\n    <strong>{text.title}</strong> {/* Display title here */}\n    <p>{text.content ? text.content.substring(0, 200) : 'No content available'}...</p>\n\n  </div>\n))}\n\n        </div>\n        <button className=\"new-task-btn\" onClick={handleNewTaskClick}>New Task</button> {/* Handle click event and call navigate function */}\n      </div>\n    </div>\n  );\n}\n\nexport default CatalogPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}